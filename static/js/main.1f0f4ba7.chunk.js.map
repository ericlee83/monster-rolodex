{"version":3,"sources":["Components/Card/Card.js","Components/CardList/CardList.js","Components/SearchBox/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","placeholder","placeHolder","onChange","searchOnChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAGaA,G,kBAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,MAAMC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eACtC,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,aCHTC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNdM,G,MAAY,SAACX,GACtB,OAAO,uBAAOC,UAAU,SAASW,KAAK,SAASC,YAAab,EAAMc,YAAaC,SAAUf,EAAMgB,mBCkCpFC,E,kDA/Bb,aAAe,IAAD,8BACZ,gBAaFD,eAAiB,SAACE,GAChB,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SAbpC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAY,IAJF,E,gEAQO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEV,SAAUmB,S,+BAOrC,IAAD,EACwBC,KAAKN,MAA7Bd,EADA,EACAA,SAASW,EADT,EACSA,YACVU,EAAkBrB,EAASsB,QAAO,SAAA3B,GAAO,OAAEA,EAAQE,KAAK0B,cAAcC,SAASb,EAAYY,kBACjG,OACE,sBAAK/B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWa,YAAa,iBAAkBE,eAAgBa,KAAKb,iBAC/D,cAAC,EAAD,CAAUP,SAAUqB,W,GA1BVI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1f0f4ba7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img className='img' alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2`}/>\n    <h2>{props.monster.name}</h2>\n    <p>{props.monster.email}</p>\n  </div>\n);\n","import React from \"react\";\nimport \"./CardList.css\";\nimport { Card } from \"../Card/Card\";\n\nexport const CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n","import './SearchBox.css';\n\nexport const SearchBox = (props)=>{\n    return(<input className='search' type=\"search\" placeholder={props.placeHolder} onChange={props.searchOnChange}/>);\n}","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./Components/CardList/CardList\";\nimport { SearchBox } from \"./Components/SearchBox/SearchBox\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField:''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  searchOnChange = (e) =>{\n    this.setState({searchField:e.target.value});\n  }\n\n  render() {\n    const {monsters,searchField} = this.state;\n    const filteredMonters = monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Mosters Rolodex</h1>\n        <SearchBox placeHolder={'search monster'} searchOnChange={this.searchOnChange}/>\n        <CardList monsters={filteredMonters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}